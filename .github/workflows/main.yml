name: CI devops 2025
on:
  # to begin you want to launch this job in main and develop
  push:
    branches: 
      - main
      - develop
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-24.04
    steps:
      # checkout your github code using actions/checkout@v4
      - uses: actions/checkout@v4

      # do the same with another action (actions/setup-java@v4) that enable to setup jdk 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # finally build your app with the latest command
      - name: Build and test with Maven
        run: |
          cd Correction/simple-api
          mvn clean verify

  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-24.04

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          # relative path to the place where source code with Dockerfile is located
          context: Correction/simple-api
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest

      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: Correction/database
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest

      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: Correction/http-server
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest

  evaluate-performances:
    runs-on: ubuntu-24.04
    needs: build-and-push-docker-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Evaluate on SonarCloud
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=elisadty_DevOps \
            -Dsonar.organization=elisadty \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: Correction/simple-api

  deploy-to-server:
    needs: evaluate-performances
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set up SSH key and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H benoit.bassompierre.takima.cloud >> ~/.ssh/known_hosts
 
      - name: Run ansible-playbook on remote server
        working-directory: ansible
        run: |
          ansible-playbook -i inventories/setup.yml playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: false


  # deploy-to-server:
  #   needs: evaluate-performances
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up SSH key and config
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/elisa.darthenay #modif clef
  #         chmod 600 ~/.ssh/elisa.darthenay
  #         ssh-keyscan -H elisa.darthenay.takima.cloud >> ~/.ssh/known_hosts

  #         echo "Host elisa.darthenay.takima.cloud
  #           HostName elisa.darthenay.takima.cloud
  #           User admin
  #           IdentityFile ~/.ssh/elisa.darthenay
  #           StrictHostKeyChecking=no" >> ~/.ssh/config

  #     - name: Run ansible-playbook on remote server
  #       working-directory: ansible
  #       env:
  #         ANSIBLE_HOST_KEY_CHECKING: false
  #       run: |
  #         ansible-playbook -i inventories/setup.yml playbook.yml




            